plugins {
    id 'java'
    id 'idea'
}

group = 'com.lette1394'
version = '1.0.0'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

def queryDSLVersion = '4.2.1'
def springBootVersion = '2.1.6.RELEASE'
def queryDslGenerated = "src/main/generated"

dependencies {
    compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}")

    compile("org.testcontainers:testcontainers:1.11.4")

    compile("com.querydsl:querydsl-core:${queryDSLVersion}")
    compile("com.querydsl:querydsl-apt:${queryDSLVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDSLVersion}")
    compile("com.querydsl:querydsl-collections:${queryDSLVersion}")

    compile("org.projectlombok:lombok:1.18.8")
    compile("org.postgresql:postgresql:42.2.6")
    compile("mysql:mysql-connector-java:8.0.16")

    testCompile("org.testcontainers:mysql:1.11.4")
    testCompile("org.testcontainers:junit-jupiter:1.11.4")
    testCompile("com.playtika.testcontainers:embedded-postgresql:1.24")

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.springframework.cloud:spring-cloud-starter:2.1.2.RELEASE")

    testCompile("org.assertj:assertj-core:3.12.2")
    testCompile("org.junit.jupiter:junit-jupiter-api:5.5.0")
    testCompile("org.junit.jupiter:junit-jupiter-engine:5.5.0")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.5.0")

    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDSLVersion}:jpa",
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api:1.3.2",
            "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

    )
}

idea {
    module {
        sourceDirs += file('src/main/generated')
        generatedSourceDirs += file('src/main/generated')
    }
}

sourceSets {
    main.java.srcDirs += [queryDslGenerated]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(queryDslGenerated)
}

clean.doLast {
    file(queryDslGenerated).deleteDir()
}
